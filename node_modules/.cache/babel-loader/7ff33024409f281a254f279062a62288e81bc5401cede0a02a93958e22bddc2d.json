{"ast":null,"code":"var _jsxFileName = \"/Users/ankurakke/personal/project/src/TableComponent.js\",\n  _s = $RefreshSig$();\n// TableComponent.jsx\nimport React from 'react';\nimport { useTable, useGroupBy, useEditable } from 'react-table';\nimport mockData from 'mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableComponent = () => {\n  _s();\n  const columns = React.useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Label',\n    accessor: 'label'\n  }, {\n    Header: 'Description',\n    accessor: 'desc'\n  }, {\n    Header: 'Price',\n    accessor: 'price',\n    editable: true\n  }, {\n    Header: 'Category',\n    accessor: 'category',\n    groupBy: true\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setState\n  } = useTable({\n    columns,\n    data: mockData\n  }, useGroupBy, useEditable);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setState({\n          groupBy: [{\n            id: 'category'\n          }]\n        });\n      },\n      children: \"Group By Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TableComponent, \"sPlhVyoHnw14tRKrwLa65U6OVh8=\", false, function () {\n  return [useTable];\n});\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["React","useTable","useGroupBy","useEditable","mockData","jsxDEV","_jsxDEV","Fragment","_Fragment","TableComponent","_s","columns","useMemo","Header","accessor","editable","groupBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setState","data","children","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/ankurakke/personal/project/src/TableComponent.js"],"sourcesContent":["// TableComponent.jsx\nimport React from 'react';\nimport { useTable, useGroupBy, useEditable } from 'react-table';\nimport mockData from 'mockData';\n\nconst TableComponent = () => {\n  const columns = React.useMemo(\n    () => [\n      { Header: 'ID', accessor: 'id' },\n      { Header: 'Label', accessor: 'label' },\n      { Header: 'Description', accessor: 'desc' },\n      { Header: 'Price', accessor: 'price', editable: true },\n      { Header: 'Category', accessor: 'category', groupBy: true },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setState,\n  } = useTable({ columns, data: mockData }, useGroupBy, useEditable);\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          setState({ groupBy: [{ id: 'category' }] });\n        }}\n      >\n        Group By Category\n      </button>\n      <table {...getTableProps()} style={{ width: '100%' }}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default TableComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}